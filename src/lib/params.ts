import sha256 from "./sha256";

export interface Params {
  N: bigint;
  g: bigint;
  k: bigint;
  H: typeof sha256;
  hashOutputBytes: number;
}

export const buildParams = (
  prime: bigint,
  mudulo: bigint,
  hashFunction: typeof sha256,
  hashOutputBytes: number
): Params => {
  return {
    N: prime,
    g: mudulo,
    k: hashFunction(prime, mudulo),
    H: hashFunction,
    hashOutputBytes,
  };
};

export const defaults = buildParams(
  BigInt(
    `0xAC6BDB41324A9A9BF166DE5E1389582FAF72B6651987EE07FC3192943DB56050A37329CBB4A099ED8193E0757767A13DD52312AB4B03310DCD7F48A9DA04FD50E8083969EDB767B0CF6095179A163AB3661A05FBD5FAAAE82918A9962F0B93B855F97993EC975EEAA80D740ADBF4FF747359D041D5C33EA71D281E446B14773BCA97B43A23FB801676BD207A436C6481F1D2B9078717461A5B9D32E688F87748544523B524B0D57D5EA77A2775D2ECFA032CFBDBF52FB3786160279004E57AE6AF874E7303CE53299CCC041C7BC308D82A5698F3A8D0C38271AE35F8E9DBFBB694B5C803D89F7AE435DE236D525F54759B65E372FCD68EF20FA7111F9E4AFF73`
  ),
  BigInt("0x02"),
  sha256,
  256 / 8
);

export default buildParams;
